"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateDependencyResponse = void 0;
var SdkResponse_1 = require("@huaweicloud/huaweicloud-sdk-core/SdkResponse");
var UpdateDependencyResponse = /** @class */ (function (_super) {
    __extends(UpdateDependencyResponse, _super);
    function UpdateDependencyResponse() {
        return _super.call(this) || this;
    }
    UpdateDependencyResponse.prototype.withId = function (id) {
        this['id'] = id;
        return this;
    };
    UpdateDependencyResponse.prototype.withOwner = function (owner) {
        this['owner'] = owner;
        return this;
    };
    UpdateDependencyResponse.prototype.withLink = function (link) {
        this['link'] = link;
        return this;
    };
    UpdateDependencyResponse.prototype.withRuntime = function (runtime) {
        this['runtime'] = runtime;
        return this;
    };
    UpdateDependencyResponse.prototype.withEtag = function (etag) {
        this['etag'] = etag;
        return this;
    };
    UpdateDependencyResponse.prototype.withSize = function (size) {
        this['size'] = size;
        return this;
    };
    UpdateDependencyResponse.prototype.withName = function (name) {
        this['name'] = name;
        return this;
    };
    UpdateDependencyResponse.prototype.withDescription = function (description) {
        this['description'] = description;
        return this;
    };
    UpdateDependencyResponse.prototype.withFileName = function (fileName) {
        this['file_name'] = fileName;
        return this;
    };
    Object.defineProperty(UpdateDependencyResponse.prototype, "fileName", {
        get: function () {
            return this['file_name'];
        },
        set: function (fileName) {
            this['file_name'] = fileName;
        },
        enumerable: false,
        configurable: true
    });
    return UpdateDependencyResponse;
}(SdkResponse_1.SdkResponse));
exports.UpdateDependencyResponse = UpdateDependencyResponse;
