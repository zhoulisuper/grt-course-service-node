export declare class ListFunctionTriggerResult {
    private 'trigger_id';
    private 'trigger_type_code';
    private 'trigger_status';
    private 'event_data';
    private 'last_updated_time';
    private 'created_time';
    constructor(triggerId?: any, triggerTypeCode?: any, triggerStatus?: any, eventData?: any, lastUpdatedTime?: any, createdTime?: any);
    withTriggerId(triggerId: string): ListFunctionTriggerResult;
    set triggerId(triggerId: string | undefined);
    get triggerId(): string | undefined;
    withTriggerTypeCode(triggerTypeCode: ListFunctionTriggerResultTriggerTypeCodeEnum): ListFunctionTriggerResult;
    set triggerTypeCode(triggerTypeCode: ListFunctionTriggerResultTriggerTypeCodeEnum | undefined);
    get triggerTypeCode(): ListFunctionTriggerResultTriggerTypeCodeEnum | undefined;
    withTriggerStatus(triggerStatus: ListFunctionTriggerResultTriggerStatusEnum): ListFunctionTriggerResult;
    set triggerStatus(triggerStatus: ListFunctionTriggerResultTriggerStatusEnum | undefined);
    get triggerStatus(): ListFunctionTriggerResultTriggerStatusEnum | undefined;
    withEventData(eventData: object): ListFunctionTriggerResult;
    set eventData(eventData: object | undefined);
    get eventData(): object | undefined;
    withLastUpdatedTime(lastUpdatedTime: Date): ListFunctionTriggerResult;
    set lastUpdatedTime(lastUpdatedTime: Date | undefined);
    get lastUpdatedTime(): Date | undefined;
    withCreatedTime(createdTime: Date): ListFunctionTriggerResult;
    set createdTime(createdTime: Date | undefined);
    get createdTime(): Date | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFunctionTriggerResultTriggerTypeCodeEnum {
    TIMER = "TIMER",
    APIG = "APIG",
    CTS = "CTS",
    DDS = "DDS",
    DMS = "DMS",
    DIS = "DIS",
    LTS = "LTS",
    OBS = "OBS",
    SMN = "SMN",
    KAFKA = "KAFKA"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFunctionTriggerResultTriggerStatusEnum {
    ACTIVE = "ACTIVE",
    DISABLED = "DISABLED"
}
