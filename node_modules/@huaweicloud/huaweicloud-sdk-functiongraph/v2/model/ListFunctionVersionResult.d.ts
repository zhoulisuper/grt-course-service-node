import { FunctionAsyncConfig } from './FunctionAsyncConfig';
import { StrategyConfig } from './StrategyConfig';
export declare class ListFunctionVersionResult {
    private 'func_urn';
    private 'func_name';
    private 'domain_id';
    namespace: string;
    private 'project_name';
    private 'package';
    runtime: ListFunctionVersionResultRuntimeEnum;
    timeout: number;
    handler: string;
    private 'memory_size';
    cpu: number;
    private 'code_type';
    private 'code_url'?;
    private 'code_filename'?;
    private 'code_size';
    private 'user_data'?;
    private 'encrypted_user_data'?;
    digest: string;
    version: string;
    private 'image_name';
    xrole?: string;
    private 'app_xrole'?;
    private 'last_modified';
    private 'func_vpc_id'?;
    concurrency?: number;
    private 'concurrent_num'?;
    private 'strategy_config'?;
    private 'initializer_handler'?;
    private 'initializer_timeout'?;
    private 'long_time'?;
    private 'log_group_id'?;
    private 'log_stream_id'?;
    private 'function_async_config'?;
    type?: string;
    private 'enable_cloud_debug'?;
    private 'enable_dynamic_memory'?;
    private 'enterprise_project_id'?;
    constructor(funcUrn?: any, funcName?: any, domainId?: any, namespace?: any, projectName?: any, _package?: any, runtime?: any, timeout?: any, handler?: any, memorySize?: any, cpu?: any, codeType?: any, codeSize?: any, digest?: any, version?: any, imageName?: any, lastModified?: any);
    withFuncUrn(funcUrn: string): ListFunctionVersionResult;
    set funcUrn(funcUrn: string | undefined);
    get funcUrn(): string | undefined;
    withFuncName(funcName: string): ListFunctionVersionResult;
    set funcName(funcName: string | undefined);
    get funcName(): string | undefined;
    withDomainId(domainId: string): ListFunctionVersionResult;
    set domainId(domainId: string | undefined);
    get domainId(): string | undefined;
    withNamespace(namespace: string): ListFunctionVersionResult;
    withProjectName(projectName: string): ListFunctionVersionResult;
    set projectName(projectName: string | undefined);
    get projectName(): string | undefined;
    withPackage(_package: string): ListFunctionVersionResult;
    set _package(_package: string | undefined);
    get _package(): string | undefined;
    withRuntime(runtime: ListFunctionVersionResultRuntimeEnum): ListFunctionVersionResult;
    withTimeout(timeout: number): ListFunctionVersionResult;
    withHandler(handler: string): ListFunctionVersionResult;
    withMemorySize(memorySize: number): ListFunctionVersionResult;
    set memorySize(memorySize: number | undefined);
    get memorySize(): number | undefined;
    withCpu(cpu: number): ListFunctionVersionResult;
    withCodeType(codeType: ListFunctionVersionResultCodeTypeEnum): ListFunctionVersionResult;
    set codeType(codeType: ListFunctionVersionResultCodeTypeEnum | undefined);
    get codeType(): ListFunctionVersionResultCodeTypeEnum | undefined;
    withCodeUrl(codeUrl: string): ListFunctionVersionResult;
    set codeUrl(codeUrl: string | undefined);
    get codeUrl(): string | undefined;
    withCodeFilename(codeFilename: string): ListFunctionVersionResult;
    set codeFilename(codeFilename: string | undefined);
    get codeFilename(): string | undefined;
    withCodeSize(codeSize: number): ListFunctionVersionResult;
    set codeSize(codeSize: number | undefined);
    get codeSize(): number | undefined;
    withUserData(userData: string): ListFunctionVersionResult;
    set userData(userData: string | undefined);
    get userData(): string | undefined;
    withEncryptedUserData(encryptedUserData: string): ListFunctionVersionResult;
    set encryptedUserData(encryptedUserData: string | undefined);
    get encryptedUserData(): string | undefined;
    withDigest(digest: string): ListFunctionVersionResult;
    withVersion(version: string): ListFunctionVersionResult;
    withImageName(imageName: string): ListFunctionVersionResult;
    set imageName(imageName: string | undefined);
    get imageName(): string | undefined;
    withXrole(xrole: string): ListFunctionVersionResult;
    withAppXrole(appXrole: string): ListFunctionVersionResult;
    set appXrole(appXrole: string | undefined);
    get appXrole(): string | undefined;
    withLastModified(lastModified: Date): ListFunctionVersionResult;
    set lastModified(lastModified: Date | undefined);
    get lastModified(): Date | undefined;
    withFuncVpcId(funcVpcId: string): ListFunctionVersionResult;
    set funcVpcId(funcVpcId: string | undefined);
    get funcVpcId(): string | undefined;
    withConcurrency(concurrency: number): ListFunctionVersionResult;
    withConcurrentNum(concurrentNum: number): ListFunctionVersionResult;
    set concurrentNum(concurrentNum: number | undefined);
    get concurrentNum(): number | undefined;
    withStrategyConfig(strategyConfig: StrategyConfig): ListFunctionVersionResult;
    set strategyConfig(strategyConfig: StrategyConfig | undefined);
    get strategyConfig(): StrategyConfig | undefined;
    withInitializerHandler(initializerHandler: string): ListFunctionVersionResult;
    set initializerHandler(initializerHandler: string | undefined);
    get initializerHandler(): string | undefined;
    withInitializerTimeout(initializerTimeout: number): ListFunctionVersionResult;
    set initializerTimeout(initializerTimeout: number | undefined);
    get initializerTimeout(): number | undefined;
    withLongTime(longTime: boolean): ListFunctionVersionResult;
    set longTime(longTime: boolean | undefined);
    get longTime(): boolean | undefined;
    withLogGroupId(logGroupId: string): ListFunctionVersionResult;
    set logGroupId(logGroupId: string | undefined);
    get logGroupId(): string | undefined;
    withLogStreamId(logStreamId: string): ListFunctionVersionResult;
    set logStreamId(logStreamId: string | undefined);
    get logStreamId(): string | undefined;
    withFunctionAsyncConfig(functionAsyncConfig: FunctionAsyncConfig): ListFunctionVersionResult;
    set functionAsyncConfig(functionAsyncConfig: FunctionAsyncConfig | undefined);
    get functionAsyncConfig(): FunctionAsyncConfig | undefined;
    withType(type: string): ListFunctionVersionResult;
    withEnableCloudDebug(enableCloudDebug: string): ListFunctionVersionResult;
    set enableCloudDebug(enableCloudDebug: string | undefined);
    get enableCloudDebug(): string | undefined;
    withEnableDynamicMemory(enableDynamicMemory: boolean): ListFunctionVersionResult;
    set enableDynamicMemory(enableDynamicMemory: boolean | undefined);
    get enableDynamicMemory(): boolean | undefined;
    withEnterpriseProjectId(enterpriseProjectId: string): ListFunctionVersionResult;
    set enterpriseProjectId(enterpriseProjectId: string | undefined);
    get enterpriseProjectId(): string | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFunctionVersionResultRuntimeEnum {
    JAVA8 = "Java8",
    JAVA11 = "Java11",
    NODE_JS6_10 = "Node.js6.10",
    NODE_JS8_10 = "Node.js8.10",
    NODE_JS10_16 = "Node.js10.16",
    NODE_JS12_13 = "Node.js12.13",
    NODE_JS14_18 = "Node.js14.18",
    PYTHON2_7 = "Python2.7",
    PYTHON3_6 = "Python3.6",
    PYTHON3_9 = "Python3.9",
    GO1_8 = "Go1.8",
    GO1_X = "Go1.x",
    C__NET_CORE_2_0 = "C#(.NET Core 2.0)",
    C__NET_CORE_2_1 = "C#(.NET Core 2.1)",
    C__NET_CORE_3_1 = "C#(.NET Core 3.1)",
    PHP7_3 = "PHP7.3"
}
/**
    * @export
    * @enum {string}
    */
export declare enum ListFunctionVersionResultCodeTypeEnum {
    INLINE = "inline",
    ZIP = "zip",
    OBS = "obs",
    JAR = "jar"
}
