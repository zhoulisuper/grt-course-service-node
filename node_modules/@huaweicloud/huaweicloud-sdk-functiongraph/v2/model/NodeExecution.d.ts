export declare class NodeExecution {
    status?: NodeExecutionStatusEnum;
    input?: object;
    output?: object;
    private 'begin_time'?;
    private 'end_time'?;
    private 'error_message'?;
    constructor();
    withStatus(status: NodeExecutionStatusEnum): NodeExecution;
    withInput(input: object): NodeExecution;
    withOutput(output: object): NodeExecution;
    withBeginTime(beginTime: number): NodeExecution;
    set beginTime(beginTime: number | undefined);
    get beginTime(): number | undefined;
    withEndTime(endTime: number): NodeExecution;
    set endTime(endTime: number | undefined);
    get endTime(): number | undefined;
    withErrorMessage(errorMessage: object): NodeExecution;
    set errorMessage(errorMessage: object | undefined);
    get errorMessage(): object | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum NodeExecutionStatusEnum {
    SUCCESS = "success",
    FAIL = "fail",
    RUNNING = "running",
    TIMEOUT = "timeout",
    CANCEL = "cancel"
}
