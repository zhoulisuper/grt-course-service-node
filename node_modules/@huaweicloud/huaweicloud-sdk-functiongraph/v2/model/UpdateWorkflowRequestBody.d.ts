import { ExpressConfig } from './ExpressConfig';
import { Function } from './Function';
import { OperationState } from './OperationState';
import { Retry } from './Retry';
import { Trigger } from './Trigger';
export declare class UpdateWorkflowRequestBody {
    name?: string;
    description?: string;
    triggers?: Array<Trigger>;
    start?: string;
    functions?: Array<Function>;
    states?: Array<OperationState>;
    constants?: object;
    retries?: Array<Retry>;
    mode?: UpdateWorkflowRequestBodyModeEnum;
    private 'express_config'?;
    private 'enterprise_project_id'?;
    constructor();
    withName(name: string): UpdateWorkflowRequestBody;
    withDescription(description: string): UpdateWorkflowRequestBody;
    withTriggers(triggers: Array<Trigger>): UpdateWorkflowRequestBody;
    withStart(start: string): UpdateWorkflowRequestBody;
    withFunctions(functions: Array<Function>): UpdateWorkflowRequestBody;
    withStates(states: Array<OperationState>): UpdateWorkflowRequestBody;
    withConstants(constants: object): UpdateWorkflowRequestBody;
    withRetries(retries: Array<Retry>): UpdateWorkflowRequestBody;
    withMode(mode: UpdateWorkflowRequestBodyModeEnum): UpdateWorkflowRequestBody;
    withExpressConfig(expressConfig: ExpressConfig): UpdateWorkflowRequestBody;
    set expressConfig(expressConfig: ExpressConfig | undefined);
    get expressConfig(): ExpressConfig | undefined;
    withEnterpriseProjectId(enterpriseProjectId: string): UpdateWorkflowRequestBody;
    set enterpriseProjectId(enterpriseProjectId: string | undefined);
    get enterpriseProjectId(): string | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateWorkflowRequestBodyModeEnum {
    NORMAL = "NORMAL",
    EXPRESS = "EXPRESS"
}
