import { FuncVpc } from './FuncVpc';
import { MountConfig } from './MountConfig';
import { StrategyConfig } from './StrategyConfig';
export declare class UpdateFunctionConfigRequestBody {
    private 'func_name';
    runtime: UpdateFunctionConfigRequestBodyRuntimeEnum;
    timeout: number;
    handler: string;
    private 'memory_size';
    private 'user_data'?;
    private 'encrypted_user_data'?;
    xrole?: string;
    private 'app_xrole'?;
    description?: string;
    private 'func_vpc'?;
    private 'mount_config'?;
    private 'strategy_config'?;
    private 'extend_config'?;
    private 'initializer_handler'?;
    private 'initializer_timeout'?;
    private 'enterprise_project_id'?;
    private 'is_stateful_function'?;
    constructor(funcName?: any, runtime?: any, timeout?: any, handler?: any, memorySize?: any);
    withFuncName(funcName: string): UpdateFunctionConfigRequestBody;
    set funcName(funcName: string | undefined);
    get funcName(): string | undefined;
    withRuntime(runtime: UpdateFunctionConfigRequestBodyRuntimeEnum): UpdateFunctionConfigRequestBody;
    withTimeout(timeout: number): UpdateFunctionConfigRequestBody;
    withHandler(handler: string): UpdateFunctionConfigRequestBody;
    withMemorySize(memorySize: number): UpdateFunctionConfigRequestBody;
    set memorySize(memorySize: number | undefined);
    get memorySize(): number | undefined;
    withUserData(userData: string): UpdateFunctionConfigRequestBody;
    set userData(userData: string | undefined);
    get userData(): string | undefined;
    withEncryptedUserData(encryptedUserData: string): UpdateFunctionConfigRequestBody;
    set encryptedUserData(encryptedUserData: string | undefined);
    get encryptedUserData(): string | undefined;
    withXrole(xrole: string): UpdateFunctionConfigRequestBody;
    withAppXrole(appXrole: string): UpdateFunctionConfigRequestBody;
    set appXrole(appXrole: string | undefined);
    get appXrole(): string | undefined;
    withDescription(description: string): UpdateFunctionConfigRequestBody;
    withFuncVpc(funcVpc: FuncVpc): UpdateFunctionConfigRequestBody;
    set funcVpc(funcVpc: FuncVpc | undefined);
    get funcVpc(): FuncVpc | undefined;
    withMountConfig(mountConfig: MountConfig): UpdateFunctionConfigRequestBody;
    set mountConfig(mountConfig: MountConfig | undefined);
    get mountConfig(): MountConfig | undefined;
    withStrategyConfig(strategyConfig: StrategyConfig): UpdateFunctionConfigRequestBody;
    set strategyConfig(strategyConfig: StrategyConfig | undefined);
    get strategyConfig(): StrategyConfig | undefined;
    withExtendConfig(extendConfig: string): UpdateFunctionConfigRequestBody;
    set extendConfig(extendConfig: string | undefined);
    get extendConfig(): string | undefined;
    withInitializerHandler(initializerHandler: string): UpdateFunctionConfigRequestBody;
    set initializerHandler(initializerHandler: string | undefined);
    get initializerHandler(): string | undefined;
    withInitializerTimeout(initializerTimeout: number): UpdateFunctionConfigRequestBody;
    set initializerTimeout(initializerTimeout: number | undefined);
    get initializerTimeout(): number | undefined;
    withEnterpriseProjectId(enterpriseProjectId: string): UpdateFunctionConfigRequestBody;
    set enterpriseProjectId(enterpriseProjectId: string | undefined);
    get enterpriseProjectId(): string | undefined;
    withIsStatefulFunction(isStatefulFunction: boolean): UpdateFunctionConfigRequestBody;
    set isStatefulFunction(isStatefulFunction: boolean | undefined);
    get isStatefulFunction(): boolean | undefined;
}
/**
    * @export
    * @enum {string}
    */
export declare enum UpdateFunctionConfigRequestBodyRuntimeEnum {
    JAVA8 = "Java8",
    JAVA11 = "Java11",
    NODE_JS6_10 = "Node.js6.10",
    NODE_JS8_10 = "Node.js8.10",
    NODE_JS10_16 = "Node.js10.16",
    NODE_JS12_13 = "Node.js12.13",
    NODE_JS14_18 = "Node.js14.18",
    PYTHON2_7 = "Python2.7",
    PYTHON3_6 = "Python3.6",
    PYTHON3_9 = "Python3.9",
    GO1_8 = "Go1.8",
    GO1_X = "Go1.x",
    C__NET_CORE_2_0 = "C#(.NET Core 2.0)",
    C__NET_CORE_2_1 = "C#(.NET Core 2.1)",
    C__NET_CORE_3_1 = "C#(.NET Core 3.1)",
    PHP7_3 = "PHP7.3"
}
