import { IHttpRequest } from './IHttpRequest';
import { HttpClient } from './HttpClient';
import { Logger, LogLevel } from '../logger';
import { DefaultHttpResponse } from './DefaultHttpResponse';
export declare class DefaultHttpClient implements HttpClient {
    private axiosInstance;
    static httpReqParam: any;
    static httpResponse: any;
    private static loggerName;
    private logger;
    private defaultOption;
    private DEFAULT_HEADERS;
    constructor(options?: ClientOptions);
    private init;
    sendRequest<T = any>(httpRequest: IHttpRequest): Promise<DefaultHttpResponse<T>>;
    private _request;
    private _convertResponse;
    transformOptions(data: any, headers: any): any;
    private formatError;
}
export interface ClientOptions {
    disableSslVerification?: boolean;
    proxy?: string;
    headers?: object;
    logger?: Logger;
    logLevel?: LogLevel;
}
