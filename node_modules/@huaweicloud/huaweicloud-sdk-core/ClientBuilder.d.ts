import { HcClient } from "./HcClient";
import { ICredential } from "./auth/ICredential";
import { Region } from "./region/region";
interface CredParams {
    ak?: string;
    sk?: string;
    project_id?: string;
    domain_id?: string;
}
export declare class ClientBuilder<T> {
    private init;
    private endpoint?;
    private credential?;
    private proxyAgent?;
    private credentialType;
    private envParams;
    private region?;
    constructor(init: (hcClient: HcClient) => T, credentialType?: string);
    withEndpoint(endpoint: string): ClientBuilder<T>;
    withCredential(credential?: ICredential): ClientBuilder<T>;
    withProxyAgent(proxyAgent: string): ClientBuilder<T>;
    withRegion(region: Region): this;
    build(): T;
    /**
     * 从环境变量获取 HUAWEICLOUD_SDK_TYPE
     * 环境变量里没有则使用 credentialType[0]
     * 生成credential实体
     * 从环境变量获取 AK SK projectId/domainId 进行赋值， 如果环境变量是GlobalCredentials，则赋值domainId
     * @returns Credentials
     */
    getCredentialFromEnvironment(): ICredential;
    whichCredential(sdkType: string): any;
    getInputParamCredential(CredentialsType: any, credential: CredParams): any;
}
export {};
